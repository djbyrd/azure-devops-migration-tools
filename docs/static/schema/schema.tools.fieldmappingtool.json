{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://devopsmigration.io/schema/schema.tools.fieldmappingtool.json",
  "title": "FieldMappingTool",
  "description": "Tool for applying field mapping transformations to work items during migration, supporting various field mapping strategies like direct mapping, regex transformations, and value lookups.",
  "type": "object",
  "properties": {
    "Enabled": {
      "description": "If set to `true` then the tool will run. Set to `false` and the processor will not run.",
      "type": "boolean",
      "default": "true"
    },
    "FieldMaps": {
      "description": "Gets or sets the list of field mapping configurations to apply.",
      "type": "array",
      "prefixItems": [
        {
          "anyOf": [
            {
              "title": "FieldCalculationMap",
              "description": "Performs mathematical calculations on numeric fields using NCalc expressions during migration.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "expression": {
                  "description": "Gets or sets the NCalc expression to evaluate. Variables in the expression should be enclosed in square brackets (e.g., \"[x]*2\").",
                  "type": "string",
                  "default": "null"
                },
                "parameters": {
                  "description": "Gets or sets a dictionary mapping variable names used in the expression to source field reference names.",
                  "type": "object",
                  "default": "{}",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "targetField": {
                  "description": "Gets or sets the target field reference name where the calculated result will be stored.",
                  "type": "string",
                  "default": "null"
                }
              }
            },
            {
              "title": "FieldClearMap",
              "description": "Clears a target field by setting its value to null, useful for removing data from specific fields during migration.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "targetField": {
                  "description": "Gets or sets the name of the target field to be cleared/set to null during work item migration.",
                  "type": "string"
                }
              }
            },
            {
              "title": "FieldLiteralMap",
              "description": "Maps a literal (static) value to a target field, useful for setting constant values across all migrated work items.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "targetField": {
                  "description": "Gets or sets the name of the target field that will be set to the specified literal value.",
                  "type": "string"
                },
                "value": {
                  "description": "Gets or sets the literal value that will be assigned to the target field during migration.",
                  "type": "string"
                }
              }
            },
            {
              "title": "FieldMergeMap",
              "description": "Merges values from multiple source fields into a single target field using a specified format template.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "formatExpression": {
                  "description": "missing XML code comments",
                  "type": "string"
                },
                "sourceFields": {
                  "description": "missing XML code comments",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "targetField": {
                  "description": "missing XML code comments",
                  "type": "string"
                }
              }
            },
            {
              "title": "FieldSkipMap",
              "description": "Skips field mapping for a specific target field, effectively leaving the field unchanged during migration.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "targetField": {
                  "description": "Gets or sets the name of the target field that should be skipped during migration, resetting it to its original value.",
                  "type": "string"
                }
              }
            },
            {
              "title": "FieldToFieldMap",
              "description": "Maps the value from a source field to a target field directly, with optional default value substitution for empty or null values.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "defaultValue": {
                  "description": "Gets or sets the default value to use when the source field is empty or null.",
                  "type": "string"
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "fieldMapMode": {
                  "description": "Gets or sets the mode of field mapping to be applied during migration. SourceToTarget will get data from the source system and apply it to the target. TargetToTarget will move data between the target fields.",
                  "type": "string",
                  "default": "SourceToTarget"
                },
                "sourceField": {
                  "description": "Gets or sets the name of the source field to copy data from during migration.",
                  "type": "string"
                },
                "targetField": {
                  "description": "Gets or sets the name of the target field to copy data to during migration.",
                  "type": "string"
                }
              }
            },
            {
              "title": "FieldToFieldMultiMap",
              "description": "missing XML code comments",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "SourceToTargetMappings": {
                  "description": "missing XML code comments",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "title": "FieldToTagFieldMap",
              "description": "missing XML code comments",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "formatExpression": {
                  "description": "missing XML code comments",
                  "type": "string"
                },
                "sourceField": {
                  "description": "missing XML code comments",
                  "type": "string"
                }
              }
            },
            {
              "title": "FieldValueMap",
              "description": "Maps field values based on a lookup table, allowing specific source values to be translated to different target values.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "defaultValue": {
                  "description": "Gets or sets the default value to use when no mapping is found for the source field value.",
                  "type": "string"
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "sourceField": {
                  "description": "Gets or sets the name of the source field to read values from during migration.",
                  "type": "string"
                },
                "targetField": {
                  "description": "Gets or sets the name of the target field to write mapped values to during migration.",
                  "type": "string"
                },
                "valueMapping": {
                  "description": "Gets or sets the dictionary that maps source field values to target field values. Key is the source value, value is the target value.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "title": "MultiValueConditionalMap",
              "description": "missing XML code comments",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "sourceFieldsAndValues": {
                  "description": "missing XML code comments",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "targetFieldsAndValues": {
                  "description": "missing XML code comments",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "title": "RegexFieldMap",
              "description": "Applies regular expression transformations to map values from a source field to a target field using pattern matching and replacement.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "pattern": {
                  "description": "Gets or sets the regular expression pattern to match against the source field value.",
                  "type": "string"
                },
                "replacement": {
                  "description": "Gets or sets the replacement pattern that defines how matched groups should be used to construct the target value.",
                  "type": "string"
                },
                "sourceField": {
                  "description": "Gets or sets the name of the source field to read data from and apply regex pattern matching.",
                  "type": "string"
                },
                "targetField": {
                  "description": "Gets or sets the name of the target field to write the regex-transformed data to.",
                  "type": "string"
                }
              }
            },
            {
              "title": "TreeToTagFieldMap",
              "description": "Maps work item area path or iteration path hierarchies to tags, allowing tree structures to be represented as flat tag collections.",
              "type": "object",
              "properties": {
                "ApplyTo": {
                  "description": "A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use \"*\" to apply to all Work Item Types.",
                  "type": "array",
                  "prefixItems": [
                    {
                      "type": "string"
                    }
                  ]
                },
                "Enabled": {
                  "description": "If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.",
                  "type": "boolean"
                },
                "timeTravel": {
                  "description": "Gets or sets the number of months to travel back in time when looking up historical area path values. Use 0 for current values.",
                  "type": "integer"
                },
                "toSkip": {
                  "description": "Gets or sets the number of levels to skip from the root when converting area path hierarchy to tags. For example, if set to 2, \"ProjectName\\Level1\\Level2\\Level3\" would skip \"ProjectName\\Level1\" and start from \"Level2\".",
                  "type": "integer"
                }
              }
            }
          ]
        }
      ]
    }
  }
}